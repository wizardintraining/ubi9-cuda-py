###################################
# adapted from https://github.com/instructlab/instructlab/blob/main/containers/cuda/Containerfile
###################################
ARG PYTHON_VERSION=3.11
ARG INSTRUCTLAB_VERSION=0.24.1
ARG INSTRUCTLAB_PKG="instructlab[cuda]"

FROM quay.io/stewhite/ubi9-cuda-py:0.1.1-devel as ilab-build

ENV INSTRUCTLAB_VERSION ${INSTRUCTLAB_VERSION}
ENV INSTRUCTLAB_PKG ${INSTRUCTLAB_PKG}
ENV PYTHON_VERSION ${PYTHON_VERSION}
ENV PIP_NO_CACHE_DIR off
ENV PIP_DISABLE_PIP_VERSION_CHECK 1

ENV TORCH_CUDA_ARCH_LIST="7.0 7.5 8.0 8.6 8.7 8.9 9.0+PTX"
ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1
ENV TORCH_CUDNN_V8_API_ENABLED=1

USER 0

RUN dnf install -y --nodocs --setopt=install_weak_deps=False \
    alsa-lib \
    compat-openssl11 \
    libsndfile \
    jq \
    libaio \
    libcutensor2 \
    libtool \
    llvm \
    pango \
    skopeo \
    sudo \
    tk \
    valgrind \
    && dnf clean all

USER 1001

# max jobs used by Ninja to build extensions
ARG max_jobs=4
ENV MAX_JOBS=${max_jobs}
# number of threads used by nvcc
ARG nvcc_threads=8
ENV NVCC_THREADS=$nvcc_threads

RUN python3 -m venv --upgrade-deps ${APP_ROOT} \
    && pip install 'torch==2.5.1' psutil \
    && pip install --verbose flash_attn --no-build-isolation

RUN pip install 'vllm@git+https://github.com/opendatahub-io/vllm@v0.7.2.0'

RUN CMAKE_ARGS="-DGGML_CUDA=on -DGGML_NATIVE=off" GGML_CCACHE=OFF CUDA_DOCKER_ARCH=all \
    pip install --upgrade --verbose 'instructlab[cuda]==0.24.1'


##################
# run container #
##################

FROM quay.io/stewhite/ubi9-cuda-py:latest as runtime-container

ENV INSTRUCTLAB_VERSION ${INSTRUCTLAB_VERSION}
ENV INSTRUCTLAB_PKG ${INSTRUCTLAB_PKG}
ENV PYTHON_VERSION ${PYTHON_VERSION}
ENV PIP_NO_CACHE_DIR off
ENV PIP_DISABLE_PIP_VERSION_CHECK 1

ENV TORCH_CUDA_ARCH_LIST="7.0 7.5 8.0 8.6 8.7 8.9 9.0+PTX"
ENV TORCH_ALLOW_TF32_CUBLAS_OVERRIDE=1
ENV TORCH_CUDNN_V8_API_ENABLED=1

USER 0

RUN dnf install -y --nodocs --setopt=install_weak_deps=False \
    compat-openssl11 \
    libsndfile \
    jq \
    libaio \
    libcutensor2 \
    libtool \
    llvm \
    pango \
    skopeo \
    sudo \
    tk \
    valgrind \
    && dnf clean all

COPY --from=ilab-build --chown=1001:0 /opt/app-root/lib64 /opt/app-root/lib64
COPY --from=ilab-build --chown=1001:0 /opt/app-root/bin /opt/app-root/bin

# Fix permissions to support pip in Openshift environments
RUN chmod -R g+w /opt/app-root/lib/python3.11/site-packages \
    && fix-permissions ${APP_ROOT} -P

USER 1001

ENTRYPOINT ["ilab"]

CMD ["--version"] 
